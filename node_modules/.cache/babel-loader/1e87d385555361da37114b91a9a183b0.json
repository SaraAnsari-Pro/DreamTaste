{"ast":null,"code":"var _jsxFileName = \"/Users/saraansari/Desktop/BIT197/dream-taste/src/Component/pages/OrderPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../../App.css';\nimport Footer from \"../Footer\";\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconstyle: \"solid\",\n  Style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight\n    }\n  }\n};\nexport default function OrderPage() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: 45,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\" Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"OrderPage\",\n      children: \"Online Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"Formgroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for your order.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n\n_s(OrderPage, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = OrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"sources":["/Users/saraansari/Desktop/BIT197/dream-taste/src/Component/pages/OrderPage.js"],"names":["React","useState","Footer","CardElement","useElements","useStripe","axios","CARD_OPTIONS","iconstyle","Style","base","iconColor","color","fontWeight","OrderPage","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,yBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,OADM;AAEjBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAC,SADR;AAEFC,MAAAA,KAAK,EAAE,MAFL;AAGFC,MAAAA;AAHE;AADH;AAFU,CAArB;AAYA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC5DC,MAAAA,IAAI,EAAE,MADsD;AAE5DC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoBxB,WAApB;AAFsD,KAA3B,CAArC;;AAKJ,QAAG,CAACmB,KAAJ,EAAW;AACP,UAAI;AACA,cAAM;AAACM,UAAAA;AAAD,YAAOL,aAAb;AACA,cAAMM,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,+BAAX,EAA4C;AAC/DC,UAAAA,MAAM,EAAE,EADuD;AAE/DH,UAAAA;AAF+D,SAA5C,CAAvB;;AAIA,YAAIC,QAAQ,CAACG,IAAT,CAAcjB,OAAlB,EAA2B;AACvBkB,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAlB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,OAVD,CAUE,OAAOM,KAAP,EAAa;AACVW,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,KAAtB;AAEJ;AACJ,KAfD,MAeO;AACFW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,OAAlB;AAEA;AACJ,GA1BD;;AA2BI,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGG,CAACpB,OAAD,gBACC;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAAA,8BACE;AAAU,QAAA,SAAS,EAAC,WAApB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAEZ;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAUC;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbJ,eAiBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GAtDuBO,S;UAGTT,S,EACED,W;;;KAJOU,S","sourcesContent":["import React, {useState} from 'react'\nimport '../../App.css';\nimport Footer from \"../Footer\"\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n\nconst CARD_OPTIONS = {\n    iconstyle: \"solid\",\n    Style: {\n        base: {\n            iconColor:\"#c4f0ff\",\n            color: \"#fff\",\n            fontWeight\n        }\n    }\n}\n\n\nexport default function OrderPage() {\n\nconst [success, setSuccess] = useState(false)\nconst stripe = useStripe()\nconst elements = useElements()\n\nconst handleSubmit = async (e) => {\n    e.preventDefault()\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n    })\n\nif(!error) {\n    try {\n        const {id} = paymentMethod\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n            amount: 45,\n            id\n        })\n        if (response.data.success) {\n            console.log(\"successful payment\")\n            setSuccess(true)\n        }\n    } catch (error){\n         console.log(\" Error\", error)\n\n    }\n} else { \n     console.log(error.message)\n\n    }\n}\n    return (\n      <div>\n        <h1 className=\"OrderPage\">Online Payment</h1>\n\n        {!success ? \n          <form onSubmit={handleSubmit}>\n            <fieldset className=\"Formgroup\">\n              <div className=\"FormRow\">\n                <CardElement options={CARD_OPTIONS} />\n              </div>\n            </fieldset>\n            <button>pay</button>\n          </form>\n         : \n          <div>\n            <h2>Thank you for your order.</h2>\n          </div>\n        }\n        <Footer />\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}